// Generated by CoffeeScript 1.6.3
var DiffMatchPatch, TextDiff, ValidationErrors, errors;

ValidationErrors = require('./validation-errors').ValidationErrors;

errors = require('../errors');

DiffMatchPatch = require('googlediff');

TextDiff = (function() {
  function TextDiff(real, expected) {
    var outError;
    this.real = real;
    this.expected = expected;
    if (typeof this.real !== 'string') {
      outError = new errors.DataNotStringError('String validator real: input data is not string');
      outError['data'] = this.real;
      throw outError;
    }
    if (typeof this.expected !== 'string') {
      outError = new errors.DataNotStringError('String validator expected: input data is not string');
      outError['data'] = this.expected;
      throw outError;
    }
  }

  TextDiff.prototype.validate = function() {
    var dmp, patch;
    this.output = null;
    dmp = new DiffMatchPatch;
    patch = dmp.patch_make(this.real, this.expected);
    return this.output = dmp.patch_toText(patch);
  };

  TextDiff.evaluateOutputToResults = function(data) {
    var message, results;
    results = [];
    if (data === null) {
      return results;
    }
    if (data === '') {
      return [];
    } else {
      message = {
        severity: 'error',
        message: 'Real and expected data does not match.'
      };
      results.push(message);
    }
    return results;
  };

  TextDiff.prototype.getHash = function(data) {
    return crypto.createHash('md5').update(JSON.stringify(data)).digest('hex');
  };

  return TextDiff;

})();

module.exports = {
  TextDiff: TextDiff
};
